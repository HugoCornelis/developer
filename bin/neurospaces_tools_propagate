#!/usr/bin/perl -w
#!/usr/bin/perl -d:ptkdb -w
#


use strict;


use Getopt::Long;

use YAML;


my $all_packages;

{
    local $/;

    $all_packages = Load(`neurospaces_packages`);

    # remove key, extract value

    $all_packages = [ %$all_packages, ];

    $all_packages = $all_packages->[1];

    # remove key, extract value

    $all_packages = [ %$all_packages, ];

    $all_packages = $all_packages->[1];

    # convert to hash for ease of use

    $all_packages
	= {
	   map
	   {
	       $_ => 1,
	   }
	   @$all_packages,
	  };

#     print Dump($all_packages);
}


my $all_tools
    = {
       "tests/neurospaces_harness" => {
				       description => "Searches test specifications and executes them.",
				       source_package => 'model-container',
				      },
       "tests/tests_2_html" => {
				description => "Converts test specifications to html.",
				source_package => 'model-container',
			       },
      };

sub main
{
    # loop over all known tools

    foreach my $tool_name (keys %$all_tools)
    {
	# propagate the tool

	propagate($tool_name);
    }
}


sub propagate
{
    my $tool_name = shift;

    # define the source

    my $source_package = $all_tools->{$tool_name}->{source_package};

    # loop over all targets

    my $target_packages = target_packages($all_packages, $source_package);

    foreach my $target_package (sort keys %$target_packages)
    {
	if (not $target_packages->{$target_package})
	{
	    next;
	}

	# copy the tool from source to target

	print "$0: copying $tool_name from $source_package to $target_package\n";

	`cp ~/neurospaces_project/$source_package/source/snapshots/0/$tool_name ~/neurospaces_project/$target_package/source/snapshots/0/$tool_name`;
    }
}


sub target_packages
{
    my $packages = shift;

    my $source = shift;

    my $result = { %$packages, };

    delete $result->{$source};

    return $result;
}


main();


