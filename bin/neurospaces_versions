#!/usr/bin/perl -w
#!/usr/bin/perl -d:ptkdb -w
#

use strict;


$| = 1;


use Getopt::Long;

use YAML;


$SIG{__DIE__}
    = sub {
	use Carp;

	confess @_;
    };


my $option_developer = 1;
my $option_enable;
my $option_regex_selector;
my $option_verbose;

my $exit_code = 0;


sub main
{
    read_cmd_line();

    # print out version information

    my $verbose_options = defined $option_verbose ? "--verbose " x $option_verbose : '';
    my $developer_options = defined $option_developer ? "--developer " x $option_developer : '';
    my $regex_options = defined $option_regex_selector ? "--regex '$option_regex_selector' " : '';
    my $enable_options = defined $option_enable ? "--enable $option_enable " : '';

    system "neurospaces_build $verbose_options $developer_options $regex_options $enable_options --no-configure --no-compile --no-install --enable developer";
}


sub read_cmd_line
{
    my $option_help;
    my $option_version;

    my $result
	= GetOptions
	    (
	     "developer!" => \$option_developer,
	     "enable=s" => \$option_enable,
	     "help!" => \$option_help,
	     "regex-selector=s" => \$option_regex_selector,
	     "version" => \$option_version,
	     "v|verbose+" => \$option_verbose,
	    );

    if ($option_version)
    {
	my $version = version();

	print $version . "\n";

	exit 1;
    }

    if ($option_help)
    {
	print
	    "
$0 <options>

$0: print out version information for all registered packages.

options:
    help               print usage information.
    verbose            set verbosity level.
    version            give version information.
";

	exit 1;
    }

}


sub version
{
    # $Format: "    my $version=\"${package}-${label}\";"$
    my $version="developer-prealpha-1";

    return $version;
}


main();


exit $exit_code;


