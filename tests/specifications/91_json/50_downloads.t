{"command_definitions":[{"comment":"this test is disabled if no \"default\" route to the internet can be found, the \"route\" command must output a line with the text \"default\"","arguments":["--download-server","downloads.sourceforge.net","--verbose","--verbose","--verbose","--check","--no-install","--regex","studio","--src-tag","build-37","--src-dir","/tmp/downloads.t/packages"],"preparation":{"description":"Creating a subdirectory for execution of the test","preparer":null},"command":"bin/neurospaces_build","description":"download from the downloads.sourceforge.net server.","disabled":"this test depends on the use of monotone which we don't use anymore ","command_tests":[{"timeout":100,"read":"bin/neurospaces_build: examining package installer\nbin/neurospaces_build: package installer skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package model-container\nbin/neurospaces_build: package model-container skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package heccer\nbin/neurospaces_build: package heccer skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package dash\nbin/neurospaces_build: package dash skipped, disabled is 1\nbin/neurospaces_build: examining package ssp\nbin/neurospaces_build: package ssp skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package geometry\nbin/neurospaces_build: package geometry skipped, disabled is 1\nbin/neurospaces_build: examining package studio\nbin/neurospaces_build: package studio [make distclean] skipped, condition_value is 0\nbin/neurospaces_build: package studio [make dist-keywords && make clean && make clean] skipped, condition_value is 0\nbin/neurospaces_build: package studio [test ! \"`mtn ls unknown && mtn ls missing && mtn ls changed`\" && release-expand '%package' '%release_major' '%release_minor' '%release_micro' '%release_major-%release_minor' hugo.cornelis@gmail.com --verbose && make clean && make clean && mtn ci -m '1. Keywords only: 0\n' && test ! \"`mtn ls unknown && mtn ls missing && mtn ls changed`\"] skipped, condition_value is 0\nbin/neurospaces_build: package studio [mtn tag '%version' '0'] skipped, condition_value is 0\nbin/neurospaces_build: package studio [downloading] preparing to execute \nbin/neurospaces_build: package studio [unpacking] preparing to execute \nbin/neurospaces_build: package studio [tar xfvz studio-build-37.tar.gz] executing\nstudio-build-37/\nstudio-build-37/bin/\nstudio-build-37/bin/neurospaces\nstudio-build-37/configure.ac\nstudio-build-37/aclocal.m4\nstudio-build-37/Makefile.am\nstudio-build-37/Makefile.in\nstudio-build-37/configure\nstudio-build-37/install-sh\nstudio-build-37/missing\nstudio-build-37/perl/\nstudio-build-37/perl/Neurospaces/\nstudio-build-37/perl/Neurospaces/GUI/\nstudio-build-37/perl/Neurospaces/GUI/Components/\nstudio-build-37/perl/Neurospaces/GUI/Components/Cell.pm\nstudio-build-37/perl/Neurospaces/GUI/Components/Link.pm\nstudio-build-37/perl/Neurospaces/GUI/Components/Network.pm\nstudio-build-37/perl/Neurospaces/GUI/Components/Node.pm\nstudio-build-37/perl/Neurospaces/GUI/Components/Atomic.pm\nstudio-build-37/perl/Neurospaces/GUI/Components/Root.pm\nstudio-build-37/perl/Neurospaces/GUI/Components/Mechanism.pm\nstudio-build-37/perl/Neurospaces/GUI/Tools/\nstudio-build-37/perl/Neurospaces/GUI/Tools/Renderer.pm\nstudio-build-37/perl/Neurospaces/GUI/Tools/Renderer/\nstudio-build-37/perl/Neurospaces/GUI/Tools/Renderer/External.pm\nstudio-build-37/perl/Neurospaces/GUI/Tools/numbers-7x11.txt\nstudio-build-37/perl/Neurospaces/GUI/Algorithms.pm\nstudio-build-37/perl/Neurospaces/GUI/Command.pm\nstudio-build-37/perl/Neurospaces/GUI/Extractor.pm\nstudio-build-37/perl/Neurospaces/GUI/Files.pm\nstudio-build-37/perl/Neurospaces/GUI/Matrix.pm\nstudio-build-37/perl/Neurospaces/GUI/Namespaces.pm\nstudio-build-37/perl/Neurospaces/GUI/Workload.pm\nstudio-build-37/perl/Neurospaces/Biolevels.pm\nstudio-build-37/perl/Neurospaces/GUI.pm\nstudio-build-37/perl/Neurospaces/Modeler.pm\nstudio-build-37/perl/Neurospaces/SolverInfo.pm\nstudio-build-37/perl/Neurospaces/Studio.pm\nstudio-build-37/perl/Neurospaces/Project/\nstudio-build-37/perl/Neurospaces/Project/Modules/\nstudio-build-37/perl/Neurospaces/Project/Modules/Morphology.pm\nstudio-build-37/perl/Neurospaces/Project.pm\nstudio-build-37/perl/Neurospaces/Morphology.pm\nstudio-build-37/perl/Threads.pm\nstudio-build-37/perl/stubs.pm\nstudio-build-37/perl/Makefile.am\nstudio-build-37/perl/Makefile.in\nstudio-build-37/tests/\nstudio-build-37/tests/Makefile.am\nstudio-build-37/tests/Makefile.in\nstudio-build-37/tests/specifications/\nstudio-build-37/tests/specifications/reporting.t~\nstudio-build-37/tests/specifications/reporting.t\nstudio-build-37/tests/specifications/operators.t\nstudio-build-37/tests/specifications/operators.t~\nstudio-build-37/tests/neurospaces_harness\nstudio-build-37/tests/tests_2_html\nstudio-build-37/tests/tests.config\nstudio-build-37/tests/html/\nstudio-build-37/tests/html/specifications/\nstudio-build-37/tests/html/specifications/main.html\nstudio-build-37/tests/html/specifications/operators.html\nstudio-build-37/tests/html/specifications/reporting.html\nstudio-build-37/tests/html/index.html\nstudio-build-37/tests/bin/\nstudio-build-37/tests/bin/neurospaces.source.html\nstudio-build-37/license.txt\nstudio-build-37/tests.config\nbin/neurospaces_build: package studio [tar xfvz studio-build-37.tar.gz] executed \nbin/neurospaces_build: package studio [./configure] preparing to execute \nbin/neurospaces_build: package studio, chdir from (/tmp/downloads.t/packages) to (/tmp/downloads.t/packages/studio-build-37)\nbin/neurospaces_build: package studio [./configure] executing\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for gawk... gawk\nchecking whether make sets $(MAKE)... yes\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating perl/Makefile\nconfig.status: creating tests/Makefile\nbin/neurospaces_build: package studio [./configure] executed \nbin/neurospaces_build: package studio, chdir from (/tmp/downloads.t/packages/studio-build-37) to (/tmp/downloads.t/packages)\nbin/neurospaces_build: package studio [make clean] skipped, condition_value is 0\nbin/neurospaces_build: package studio [make] preparing to execute \nbin/neurospaces_build: package studio, chdir from (/tmp/downloads.t/packages) to (/tmp/downloads.t/packages/studio-build-37)\nbin/neurospaces_build: package studio [make] executing\n","description":"Can we download packages from downloads.sourceforge.net, part 1 ?"},{"description":"Can we download packages from downloads.sourceforge.net, part 2 ?","read":"==================\nAll 1 tests passed\n==================\n","timeout":100},{"timeout":100,"read":"bin/neurospaces_build: package studio [make check] executed \nbin/neurospaces_build: package studio, chdir from (/tmp/downloads.t/packages/studio-build-37) to (/tmp/downloads.t/packages)\nbin/neurospaces_build: package studio [make dist] skipped, condition_value is 0\nbin/neurospaces_build: package studio [make distcheck] skipped, condition_value is 0\nbin/neurospaces_build: package studio [make && sudo make install] skipped, condition_value is 0\nbin/neurospaces_build: package studio [make uninstall] skipped, condition_value is 0\nbin/neurospaces_build: package studio [mtn cert '%version' -- build_report '%report'] skipped, condition_value is 0\nbin/neurospaces_build: examining package project-browser\nbin/neurospaces_build: package project-browser skipped, disabled is 1\n---\nclient:\n  OS: linux\ndescription:\n  command: bin/neurospaces_build\n  name: Build report\nglobal:\n  status: Finished\n  test_count: 0\noperations:\n  - operations: !!perl/code '{ \"DUMMY\" }'\n    package_name: studio\n  - operations: !!perl/code '{ \"DUMMY\" }'\n    package_name: studio\n  - description: unpacking\n    operations:\n      - tar\n      - xfvz\n      - studio-build-37.tar.gz\n    package_name: studio\n  - description: ./configure\n    operations:\n      - ./configure\n    package_name: studio\n  - description: make\n    operations:\n      - make\n    package_name: studio\n  - description: make check\n    operations:\n      - make\n      - check\n    package_name: studio\noptions:\n  certification-report!: 0\n  check!: 1\n  clean!: 0\n  client!: 1\n  compile!: 1\n  configure!: 1\n  developer!: 0\n  dist!: 0\n  distcheck!: 0\n  distclean!: 0\n  distkeywords!: 0\n  download-server=s: downloads.sourceforge.net\n  dry-run!: 0\n  environment=s: []\n  help!: 0\n  help-all!: 0\n  install!: 0\n  packages: 0\n  regex-selector=s: studio\n  src-dir=s: /tmp/downloads.t/packages\n  src-tag=s: build-37\n  tag=s: 0\n  uninstall!: 0\n  verbose+: 3\n","description":"Can we download packages from downloads.sourceforge.net, part 3 ?"}]},{"command_tests":[{"description":"Do we get an appropriate error message when attempting to download from a non-existent download server, part 1 ?","read":"bin/neurospaces_build: examining package developer\nbin/neurospaces_build: package developer [make distclean] skipped, condition_value is 0\nbin/neurospaces_build: package developer [make dist-keywords && make clean && make clean] skipped, condition_value is 0\nbin/neurospaces_build: package developer [test ! \"`mtn ls unknown && mtn ls missing && mtn ls changed`\" && release-expand '%package' '%release_major' '%release_minor' '%release_micro' '%release_major-%release_minor' hugo.cornelis@gmail.com --verbose && make clean && make clean && mtn ci -m '1. Keywords only: 0\n' && test ! \"`mtn ls unknown && mtn ls missing && mtn ls changed`\"] skipped, condition_value is 0\nbin/neurospaces_build: package developer [mtn tag '%version' '0'] skipped, condition_value is 0\nbin/neurospaces_build: package developer [putting the tag in the tag database] skipped, condition_value is 0\nbin/neurospaces_build: package developer [downloading] preparing to execute \nbin/neurospaces_build: package developer [$VAR1 = sub {\n            use strict 'refs';\n            my $package_information = shift @_;\n            my $description = $$package_information{'description'};\n            my $directory = $$package_information{'directory'};\n            my $filename = $$package_information{'filename'};\n            my $package_name = $$package_information{'package_name'};\n            my $url = $$package_information{'url'};\n            mkdir $directory;\n            if ($option_verbose > 1) {\n                print \"$0: package $package_name [$description from $url to $filename] executing\\n\";\n            }\n            my $http_response = getstore($url, $directory . '/' . $filename);\n            if (not is_success $http_response) {\n                warn \"$0: *** Warning: $description from ${option_download_server}: $http_response\";\n            }\n        };\n] not executed, dry_run is 1\nbin/neurospaces_build: package developer [unpacking] preparing to execute \nbin/neurospaces_build: package developer [$VAR1 = sub {\n            use strict 'refs';\n            my $package_information = shift @_;\n            my $description = $$package_information{'description'};\n            my $directory = $$package_information{'directory'};\n            my $filename = $$package_information{'filename'};\n            my $operations = $$package_information{'operations'};\n            my $package_name = $$package_information{'package_name'};\n            chdir $directory;\n            operation_execute($operations, {'description', $description, 'keywords', 0, 'package_name', $package_name}, ['tar', 'xfvz', $filename]);\n        };\n] not executed, dry_run is 1\nbin/neurospaces_build: package developer [./configure] preparing to execute \nbin/neurospaces_build: package developer skipped, [./configure], directory (/tmp/downloads.t/packages/developer-build-37) not found, assuming this package source is not installed\nbin/neurospaces_build: package developer [make clean] skipped, condition_value is 0\nbin/neurospaces_build: package developer [make] preparing to execute \nbin/neurospaces_build: package developer skipped, [make], directory (/tmp/downloads.t/packages/developer-build-37) not found, assuming this package source is not installed\nbin/neurospaces_build: package developer [make check] skipped, condition_value is 0\nbin/neurospaces_build: package developer [export NEUROSPACES_RELEASE=1 && make dist] skipped, condition_value is 0\nbin/neurospaces_build: package developer [export NEUROSPACES_RELEASE=1 && make distcheck] skipped, condition_value is 0\nbin/neurospaces_build: package developer [make && sudo make install] skipped, condition_value is 0\nbin/neurospaces_build: package developer [make clean && sudo make uninstall] skipped, condition_value is 0\nbin/neurospaces_build: package developer [uploading] skipped, condition_value is \nbin/neurospaces_build: package developer [mtn cert '%version' -- build_report '%report'] skipped, condition_value is 0\nbin/neurospaces_build: examining package model-container\nbin/neurospaces_build: package model-container skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package heccer\nbin/neurospaces_build: package heccer skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package dash\nbin/neurospaces_build: package dash skipped, disabled is 1\nbin/neurospaces_build: examining package ssp\nbin/neurospaces_build: package ssp skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package geometry\nbin/neurospaces_build: package geometry skipped, disabled is 1\nbin/neurospaces_build: examining package studio\nbin/neurospaces_build: package studio skipped, not selected using --regex-selector\nbin/neurospaces_build: examining package project-browser\nbin/neurospaces_build: package project-browser skipped, disabled is 1\n---\nclient:\n  OS: linux\ndescription:\n  command: bin/neurospaces_build\n  name: Build report\nglobal:\n  status: Finished\n  test_count: 0\noperations:\n  - operations: !!perl/code '{ \"DUMMY\" }'\n    package_name: developer\n  - operations: !!perl/code '{ \"DUMMY\" }'\n    package_name: developer\noptions:\n  certification-report!: 0\n  check!: 0\n  clean!: 0\n  client!: 1\n  compile!: 1\n  configure!: 1\n  developer!: 0\n  disable=s: ~\n  dist!: 0\n  distcheck!: 0\n  distclean!: 0\n  distkeywords!: 0\n  download-server=s: downloads.neurospaces.org\n  dry-run!: 1\n  enable=s: developer\n  environment=s: []\n  help!: 0\n  help-all!: 0\n  install!: 0\n  packages: 0\n  regex-selector=s: developer\n  src-dir=s: /tmp/downloads.t/packages\n  src-tag=s: build-37\n  tag=s: 0\n  uninstall!: 0\n  upload-server=s: ~\n  verbose+: 3\n","comment":"the test of this output is plit in two part to avoid the use of regexes in the expected output, part 1."}],"disabled":"this test depends on the use of monotone which we don't use anymore ","command":"bin/neurospaces_build","description":"download from a non-existent download server.","arguments":["--download-server","downloads.neurospaces.org","--verbose","--verbose","--verbose","--no-install","--regex","developer","--enable","developer","--src-tag","build-37","--src-dir","/tmp/downloads.t/packages","--dry-run"]}],"description":"testing of download and consequent build operations","name":"91_json/50_downloads.t"}