-*- outline -*-

* neurospaces-manager-gui
From a fresh installation:
I tried the neurospaces-manager-gui and clicking install method
first. It just sat there and did not do anything. So I swapped back to
the command line for the rest of the steps which produced the attached
log file. I expect that I should have selected the packages etc before
clicking install, but since this was not in the instructions I did not
do and followed the alternative set of instructions.

* neurospaces_harness
Likely during initialization, the regression tester collects
information about the target system.  One of the pieces of information
is a profile of the C libraries, but some of them cannot be found on
Simon's target PC.  This produces an error message similar to
'/usr/libc* not found'.  This message is an annoyance to users and
should be removed from the output.

Additional information: I cannot remember the exact details of how the
libraries are searched.  When errors are generated during the
regression tests, the information about the target system is included
in the test report.  During startup, the check for the

* neurospaces_new_component
** still required when starting a new component on the server
*** service neurospaces-servers stop
*** su - monotone
*** edit build.yml, include new configuration.
*** neurospaces_create_directories iresto, but likely not required
*** neurospaces_init iresto
*** mtn read </tmp/hugo.cornelis.key --db ~/neurospaces_project/MTN/iresto.mtn
*** exit
*** service neurospaces-servers start
*** validate from a remote machine: neurospaces_sync iresto

* Mac OS X universal binaries
Allowing compilation of universal binaries is actually easy, you
simply disable dependency tracking and allow all arch flags (ppc, i386, x86_64). 
However this increases the size of the compiled files by a great deal; libneurospaces
goes from 8 MB to 27 MB.  This should be available as an option via the 
installation scripts. Information on automake flags: http://www.gnu.org/software/hello/manual/automake/Options.html

* move
bin/signal_voltage_characteristics to the Experiment package.

* neurospaces_cron
collects the output of all tested packages, summarizes, emails the
summary, computes a SHA on the summary, puts a file with filename the
SHA and with content the summary in the filesystem.


* neurospaces_cron
produces output like:
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: output not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: OutputGenerator not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: output_spike not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: output_spike_source not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: output_vm not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: output_vm_source not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: purk_test_soma not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: purk_test_soma_aggregators not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: state not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: neurospaces not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: a1 not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: a2 not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: 1.xml not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: *.ndf not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: readcell_reset.txt not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: current_schedule not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: state not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: heccer not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: morphology2ndf.yml not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: sh-thd-* not found, please remove it from the trash list
/localhome/g3tester/neurospaces_project/installer/source/snapshots/0/bin/neurospaces_cron: done with cleanup.


* in neurospaces_cron
  #t maybe make @trash a list that read in from 
  #t a trash configuration file. 

  #t then the test specifications can add to the thrash file when the
  #t harness runs, and such that the html output can produce a list
  #t of generated output files.

* documentation publication
** current situation
*** neurospaces_docs
builds with --docs
*** neurospaces_website_prepare
builds with --website-upload or --website-prepare

** operations
*** --docs
makes docs: includes doxygen, html-upload-prepare (generates html of
automated use cases).

*** --website*
	   {
	    condition => $option_website_prepare,
	    operation => [ 'make', 'html-upload-prepare', ],
	   },
	   {
	    condition => $option_website_upload,
	    operation => [ 'make', 'html-upload', ],
	   },

* bin/neurospaces_*
globalize $packages variable.
** should have the possibility to come from the config in /etc/neurospaces.

* should come in the project management subproject
** release management utilities
test-dist, etc.

** test framework
although it would be handy to have the test utilities in each package
too.
*** tests/command_extractor

** perl
simply add all dependencies as tar files.
perhaps also Sesa ?

** website
currently in neurospaces subproject.
should go in a separate subproject, called 'website'.

** CNS2006 presentation
and others.

* instrumentor ?
is only used in the model container, so keep it there.
